{"version":3,"sources":["services/apiconfig.js","services/auth.js","services/apihelper.js","components/Header/Header.jsx","React_pages/Home.jsx","components/Registration/Login.jsx","components/Registration/Sign_up.jsx","React_pages/CurrentUser.jsx","components/Post/CreatePost.jsx","React_pages/Categories.jsx","React_pages/AllPosts.jsx","components/Post/EditPosts.jsx","React_pages/MemberPosts.jsx","React_pages/Members.jsx","React_pages/SinglePost.jsx","App.js","serviceWorker.js","index.js"],"names":["apiUrl","apiUrls","window","location","hostname","api","Axios","create","baseURL","loginUser","loginData","a","console","log","post","authentication","resp","localStorage","setItem","data","token","defaults","headers","common","authorization","user","registerUser","registerData","verifyUser","getItem","get","removeToken","axios","getUsers","response","getPosts","getUserPosts","id","getOnePost","getCategories","getOneCategory","addPost","postInfo","updatePost","put","deletePost","delete","Header","state","categories","componentDidMount","setState","class","style","height","boxShadow","fontSize","fontFamily","color","to","this","props","currentUser","username","DropdownButton","title","padding","zIndex","width","map","category","Dropdown","Item","className","css","href","name","appearance","onClick","handleLogout","handleLogin","Component","Home","paddingBottom","fontWeight","textShadow","textAlign","borderRadius","background","type","loggedInStatus","history","push","Login","handleChange","event","target","value","redirect","handleErrors","errors","error","key","password","email","display","flexDirection","flexWrap","flexFlow","onSubmit","e","preventDefault","loginSubmit","position","placeholder","onChange","textIndent","Signup","handleRegister","CurrentUser","posts","description","body","match","params","setFormData","toggleAdd","prevState","handleAdd","newPost","removePosts","deleted","filter","onePost","format","withTitle","created_at","fromNow","ago","updated_at","alignContent","confirm","withRouter","CreatePost","postData","category_ids","handleInputChange","parseInt","checked","filtered","paddingTop","paddingLeft","for","Categories","createdBy","slice","user_id","AllPosts","users","userpost","categoriesData","EditPosts","currentPost","editPosts","margin","MemberPosts","Members","src","url","App","userData","reload","removeItem","updated","oldPost","exact","path","render","isLoggedIn","handleSubmit","handleUpdate","onUpdate","items","SinglePost","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5422c872.chunk.js","sourcesContent":["import Axios from 'axios'\n\n\nlet apiUrl\nconst baseUrl = process.env.NODE_ENV === 'production' ? 'https://shoulder-api.herokuapp.com/' : 'http://localhost:3000' \n\nconst apiUrls = {\n    production: 'https://shoulder-api.herokuapp.com/',\n    development: 'http://localhost:3000/'\n}\n\nif (window.location.hostname === 'localhost') {\n    apiUrl = apiUrls.development\n} else {\n    apiUrl = apiUrls.production\n}\n\nconst api = Axios.create({\n    baseURL: apiUrl,\n})\n\nexport default api","// import api from './apihelper'\nimport api from './apiconfig'\n\nexport const loginUser = async (loginData) => {\n    console.log(api.baseURL)\n    const resp = await api.post('/auth/login', {\n        authentication: loginData\n    })\n    localStorage.setItem('authToken', resp.data.token);\n    api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n    return resp.data.user\n}\n\nexport const registerUser = async (registerData) => {\n    console.log(registerData)\n    const resp = await api.post('/users', { user: registerData })\n    console.log(resp)\n    localStorage.setItem('authToken', resp.data.token);\n    api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n    return resp.data.user\n}\n\nexport const verifyUser = async () => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n        api.defaults.headers.common.authorization = `Bearer ${token}`\n        const resp = await api.get('/auth/verify');\n        return resp.data\n    }\n    return false\n}\n\nexport const removeToken = () => {\n    api.defaults.headers.common.authorization = null\n  }","import axios from 'axios'\n// import api from './apiconfig'\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? 'https://shoulder-api.herokuapp.com/' : 'http://localhost:3000' \nlet apiUrl\n\nconst apiUrls = {\n    production: 'https://shoulder-api.herokuapp.com/',\n    development: 'http://localhost:3000/'\n}\n\nif (window.location.hostname === 'localhost') {\n    apiUrl = apiUrls.development\n} else {\n    apiUrl = apiUrls.production\n}\n\n\nconst api = axios.create({\n  baseURL: baseUrl\n})\n\n\nexport const getUsers = async () => {\n    const response = await api.get('/users')\n    return response.data\n}\n\nexport const getPosts = async () => {\n    const response = await api.get('/posts')\n    return response.data\n}\n\nexport const getUserPosts = async (id) => {\n    const response = await api.get(`/users/${id}/posts/${id}`)\n    return response.data\n}\nexport const getOnePost = async (id) => {\n    const response = await api.get(`/post/${id}`)\n    return response.data\n}\nexport const getCategories = async () => {\n    const response = await api.get('categories')\n    return response.data\n}\n\nexport const getOneCategory = async (id) => {\n    const response = await api.get(`categories/${id}`)\n    return response.data\n}\n\nexport const addPost = async (postInfo) => {\n    const response = await api.post(\"/posts\", { post: postInfo })\n    return response.data\n}\n\nexport const updatePost = async (id, postInfo) => {\n    const response = await api.put(`posts/${id}`, { post: postInfo })\n    return response.data\n}\n\nexport const deletePost = async (id) => {\n    const response = await api.delete(`posts/${id}`)\n    return response.data\n}\nexport default api","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { getCategories } from \"../../services/apihelper\";\nimport { css, cx } from \"emotion\";\n\nexport default class Header extends Component {\n  state = {\n    categories: [],\n  };\n\n  componentDidMount = async () => {\n    const categories = await getCategories();\n    this.setState({\n      categories,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header\n          class=\"fixed, w-auto top-0, relative left-0, py-10 px-12 shadow-md flex flex-row justify-even\"\n          style={{\n            height: \"12.933vmin\",\n            boxShadow: \"0px 1px 15px 1px rgba(0,0,0,0.75);\",\n          }}\n        >\n          <span\n            class=\"pr-10 font-light\"\n            style={{\n              fontSize: \"5.333vmin\",\n              fontFamily: \"Helvetica Neue\",\n              color: \"#85C0BE\",\n            }}\n          >\n            <Link to=\"/\">shoulder</Link>\n          </span>\n          {this.props.currentUser ? (\n            <nav class=\"w-full text-center font-light\">\n              <ul\n                class=\"list-none flex-shrink flex font-light justify-between\"\n                style={{\n                  height: \"3.933vmin\",\n                  fontSize: \"1.2vw\",\n                  fontFamily: \"Helvetica Neue\",\n                  color: \"#322e3b\",\n                }}\n              >\n                {/* <li\n                  class=\"bg-transparent font-light h-20\"\n                  style={{\n                    fontSize: \"2.333em\",\n                    fontFamily: \"Helvetica Neue\",\n                    color: \"#85C0BE\",\n                  }}\n                >\n                  <Link to=\"/\">shoulder</Link>\n                </li> */}\n                <h2>Hello {this.props.currentUser.username}!</h2>\n                <li class=\"\">\n                  <Link to=\"/posts\">All Posts</Link>\n                </li>\n\n                {/* <li>\n                  <Link to=\"/members\">Members</Link>\n                </li> */}\n                <li>\n                  <ul>\n                    <DropdownButton\n                      id=\"dropdown-basic-button\"\n                      title=\"Categories &#x25BE;\"\n                    >\n                      <li\n                        class=\"bg-white relative block shadow-md text-left\"\n                        style={{\n                          padding: \"12px 16px\",\n                          zIndex: \"99\",\n                          width: \"inherit\",\n                          height: \"inherit\",\n                          fontSize: \"1.20rem\",\n                        }}\n                      >\n                        {this.state.categories.map((category) => (\n                          <Dropdown.Item\n                            class=\"hover:bg-gray-300\"\n                            className={css`\n                              &:hover {\n                                font-weight: 500;\n                              }\n                            `}\n                            href={`/category/${category.id}`}\n                          >\n                            {category.name} <br />\n                          </Dropdown.Item>\n                        ))}\n                      </li>\n                    </DropdownButton>\n                  </ul>\n                </li>\n                {/* <Link to=\"/profile/:id\">Profile</Link> */}\n\n                {/* <form\n                  class=\"relative\"\n                  action=\"action_page.php\"\n                  style={{ top: \"-2px\" }}\n                >\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search..\"\n                    name=\"search\"\n                    class=\"shadow-md  pl-10\"\n                    style={{\n                      borderRadius: \"6px\",\n                      textIndent: \"15px\",\n                      width: \"235px\",\n                      height: \"2.733vw\",\n                    }}\n                  />\n                  <button\n                    type=\"submit\"\n                    class=\"font-medium text-white\"\n                    style={{\n                      fontSize: \"100%\",\n                      fontFamily: \"Helvetica\",\n                      height: \"2.733vw\",\n                      width: \"7.967vw\",\n                      borderRadius: \"0.8vw\",\n                      background: \"#85c0be\",\n                      boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                    }}\n                  >\n                    submit\n                  </button>\n                </form> */}\n\n                <li class=\"font-light \" style={{ appearance: \"none\" }}>\n                  <ul>\n                    <DropdownButton\n                      id=\"dropdown-basic-button\"\n                      title=\"Profile &#x25BE;\"\n                    >\n                      <li\n                        class=\"bg-white relative block shadow-md text-left\"\n                        style={{\n                          padding: \"12px 16px\",\n                          zIndex: \"99\",\n                          width: \"inherit\",\n                          height: \"inherit\",\n                          fontSize: \"1.20rem\",\n                        }}\n                      >\n                        <Dropdown.Item\n                          href={`/profile/${this.props.currentUser.id}`}\n                          className={css`\n                            &:hover {\n                              font-weight: 500;\n                            }\n                          `}\n                        >\n                          Your Profile\n                          <br />\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          href=\"/post/new\"\n                          class=\"text-left\"\n                          className={css`\n                            &:hover {\n                              font-weight: 500;\n                            }\n                          `}\n                        >\n                          New Post\n                        </Dropdown.Item>\n                      </li>\n                    </DropdownButton>\n                  </ul>\n                </li>\n\n                <li>\n                  <button onClick={this.props.handleLogout}>Log Out</button>\n                </li>\n              </ul>\n            </nav>\n                ) : (\n                        \n            //Conditional: Top is what will display when logged in. Bottom for new users.\n\n                        <div className=\"login\">\n                            \n\n                            \n\n\n                            <nav class=\"w-full text-center font-light\">\n              <ul\n                class=\"list-none flex-shrink flex font-light justify-between\"\n                style={{\n                  height: \"3.933vmin\",\n                  fontSize: \"1.2vw\",\n                  fontFamily: \"Helvetica Neue\",\n                  color: \"#322e3b\",\n                }}\n              >\n                {/* <li\n                  class=\"bg-transparent font-light h-20\"\n                  style={{\n                    fontSize: \"2.333em\",\n                    fontFamily: \"Helvetica Neue\",\n                    color: \"#85C0BE\",\n                  }}\n                >\n                  <Link to=\"/\">shoulder</Link>\n                </li> */}\n                {/* <h2>Hello {this.props.currentUser.username}!</h2> */}\n                <li class=\"\">\n                  <Link to=\"/posts\">All Posts</Link>\n                </li>\n\n                <li>\n                  <Link to=\"/members\">Members</Link>\n                </li>\n                {/* <Link to=\"/categories\">Categories</Link> */}\n                <li>\n                  <ul>\n                    <DropdownButton\n                      id=\"dropdown-basic-button\"\n                      title=\"Categories &#x25BE;\"\n                    >\n                      <li\n                        class=\"bg-white relative block shadow-md text-left\"\n                        style={{\n                          padding: \"12px 16px\",\n                          zIndex: \"99\",\n                          width: \"inherit\",\n                          height: \"inherit\",\n                          fontSize: \"1.20rem\",\n                        }}\n                      >\n                        {this.state.categories.map((category) => (\n                          <Dropdown.Item\n                            class=\"hover:bg-gray-300\"\n                            className={css`\n                              &:hover {\n                                font-weight: 500;\n                              }\n                            `}\n                            href={`/category/${category.id}`}\n                          >\n                            {category.name} <br />\n                          </Dropdown.Item>\n                        ))}\n                      </li>\n                    </DropdownButton>\n                  </ul>\n                </li>\n                {/* <Link to=\"/profile/:id\">Profile</Link> */}\n\n                {/* <form\n                  class=\"relative\"\n                  action=\"action_page.php\"\n                  style={{ top: \"-2px\" }}\n                >\n                  \n                                        <input\n                    type=\"text\"\n                    placeholder=\"Search..\"\n                    name=\"search\"\n                    class=\"shadow-md  pl-10\"\n                    style={{\n                      borderRadius: \"6px\",\n                      textIndent: \"15px\",\n                      width: \"235px\",\n                      height: \"2.733vw\",\n                    }}\n                  />\n                  <button\n                    type=\"submit\"\n                    class=\"font-medium text-white\"\n                    style={{\n                      fontSize: \"100%\",\n                      fontFamily: \"Helvetica\",\n                      height: \"2.733vw\",\n                      width: \"7.967vw\",\n                      borderRadius: \"0.8vw\",\n                      background: \"#85c0be\",\n                      boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                    }}\n                  >\n                    submit\n                  </button>\n                </form> */}\n\n                <li class=\"font-light \" style={{ appearance: \"none\" }}>\n\n                </li>\n\n                <li>\n                  <button onClick={this.props.handleLogin}><Link to=\"/login\">Log In</Link></button>\n                </li>\n              </ul>\n            </nav>     \n\n\n\n                            \n\n\n\n\n\n              {/* <nav>\n                <Link to=\"/\">shoulder</Link>\n\n                <h2>Posts</h2>\n                <Link to=\"/members\">Mentors</Link>\n                <Link to=\"/categories\">Categories</Link>\n                <Link to=\"/login\">Log in</Link>\n                <Link to=\"/signup\">Sign Up</Link>\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Categories\">\n                  <Dropdown.Item href=\"/categories\">\n                    All Categories\n                  </Dropdown.Item>\n                  {this.state.categories.map((category) => (\n                    <Dropdown.Item href={`/category/${category.id}`}>\n                      {category.name}\n                    </Dropdown.Item>\n                  ))}\n                </DropdownButton>\n                            </nav> */}\n                            \n\n                            \n\n\n\n\n\n\n\n\n\n              {/* \n              <form onSubmit={this.props.handleLogin}>\n                <div className=\"pair\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    name=\"username\"\n                    type=\"text\"\n                    value={this.props.userData.username}\n                    onChange={this.props.handleChange}\n                  /> */}\n              {/* </div>\n\n                <div className=\"pair\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    name=\"password\"\n                    type=\"password\"\n                    value={this.props.userData.password}\n                    onChange={this.props.handleChange}\n                  />\n                </div>\n\n                <input type=\"submit\" value=\"Login\" />\n              </form> */}\n            </div>\n          )}\n        </header>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\n\nconst Home = (props) => {\n    // const history = useHistory();\n\n\n  const handleClick = () => {\n    props.handleLogout();\n    props.history.push(\"/\");\n  };\n\n\n  return (\n    <div class=\"py-16 max-w-full m-auto block text-center\">\n      {props.currentUser && (\n        <Redirect to={`/profile/${props.currentUser.id}`} />\n      )}\n      <h1\n        style={{\n          paddingBottom: \"7.667vh\",\n          fontSize: \"8.333vw\",\n          fontFamily: \"Helvetica\",\n          fontWeight: \"normal\",\n          textShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n          textAlign: \"center\",\n          color: \"#322e3b\",\n        }}\n      >\n        It's okay to ask for help.\n      </h1>\n      <p\n        class=\"text-center font-normal\"\n        style={{\n          paddingBottom: \"80px\",\n          fontSize: \"1.833vw\",\n          fontFamily: \"Helvetica Neue\",\n          color: \"#322e3b\",\n        }}\n      >\n        Shoulder is a place to talk, share resources and find support. <br></br>{\" \"}\n        We'll help you get there.\n      </p>\n      <Link\n        to=\"/signup\"\n        class=\"inline-block\"\n        style={{\n          boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n          width: \"29.733vw\",\n          height: \"auto\",\n          borderRadius: \"16px\",\n          background: \"#85c0be\",\n        }}\n      >\n        <button\n          type=\"button\"\n          class=\"\"\n          style={{\n              color: \"#fff\",\n            fontSize: \"3.5vw\",\n            fontWeight: \"bold\",\n            fontFamily: \"Helvetica\",\n          }}\n        >\n          Get started\n        </button>\n      </Link>\n      <br></br>\n      <p\n        class=\"font-normal text-center\"\n        style={{\n          height: \"3.333vw\",\n          fontSize: \"2.267vw\",\n          fontFamily: \"Helvetica\",\n        }}\n      >\n        Already a member?\n      </p>\n      <Link\n        to=\"/login\"\n        class=\"h-12 font-medium text-center\"\n        style={{\n          fontSize: \"2.267vw\",\n          fontFamily: \"Helvetica\",\n          color: \"#85c0be\",\n        }}\n      >\n        Sign in\n      </Link>\n      <br></br>\n      {props.loggedInStatus ? (\n        <Link to=\"/logout\" onClick={handleClick}>\n          Log Out\n        </Link>\n      ) : null}\n    </div>\n  );\n};\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n    //   email: \"\",\n      password: \"\",\n    };\n  }\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  redirect = () => {\n    this.props.history.push(\"/\");\n  };\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>\n          {this.state.errors.map((error) => {\n            return <li key={error}>{error}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  };\n  render() {\n    const { username, email, password } = this.state;\n    return (\n      <div class=\"\">\n        <ul\n          class=\"py-16 max-w-full m-auto \"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            flexFlow: \"column wrap\",\n            textAlign: \"center\",\n          }}\n        >\n          <li>\n            <h1\n              style={{\n                textShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                color: \"#322e3b\",\n                fontFamily: \"Helvetica\",\n                fontSize: \"4.8vw\",\n              }}\n            >\n              Sign In\n            </h1>\n          </li>\n\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              this.props.loginSubmit(this.state);\n              this.redirect();\n            }}\n          >\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"1.733vw\",\n                fontSize: \"1.667vw\",\n              }}\n            >\n              <input\n                placeholder=\"Username\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"4.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            {/* <li style={{ position: \"relative\",padding: \"1.733vw\", fontSize: \"2.667vw\" }}>\n                    <span style={{left:\"-2.667vw\", position: \"relative\", textAlign:\"left\"}}>Email</span>\n              <input\n                placeholder=\"email\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"4.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li> */}\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"1.733vw\",\n                fontSize: \"1.667vw\",\n              }}\n            >\n              <input\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"4.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            <li class=\"p-10 md:p-10 sm:p-10\">\n              <button\n                placeholder=\"submit\"\n                type=\"submit\"\n                class=\"font-medium text-white\"\n                style={{\n                  fontFamily: \"Helvetica\",\n                  height: \"3.933vw\",\n                  width: \"9.967vw\",\n                  fontWeight: \"550\",\n                  fontSize: \"1.617vw\",\n                  borderRadius: \"0.8vw\",\n                  background: \"#85c0be\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                }}\n              >\n                Submit\n              </button>\n            </li>\n            <li>\n              <p\n                class=\"font-normal text-center\"\n                style={{\n                  height: \"3.333vw\",\n                  fontSize: \"2.267vw\",\n                  fontFamily: \"Helvetica\",\n                }}\n              >\n                Not a member?{\" \"}\n              </p>\n              <br />\n              <Link\n                to=\"/signup\"\n                class=\"font-medium text-center\"\n                style={{\n                  fontSize: \"2.267vw\",\n                  fontFamily: \"Helvetica\",\n                  color: \"#85c0be\",\n                }}\n              >\n                Sign up\n              </Link>\n            </li>\n          </form>\n          <div>{this.state.errors ? this.handleErrors() : null}</div>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    //   errors: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  redirect = () => {\n    this.props.history.push(\"/\");\n  };\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>\n          {this.state.errors.map((error) => {\n            return <li key={error}>{error}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  render() {\n    const { username, email, password } = this.state;\n    const { handleRegister, history, currentUser } = this.props;\n    return (\n      <div>\n        {\" \"}\n        <ul\n          class=\"py-16 max-w-full m-auto \"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            flexFlow: \"column wrap\",\n            textAlign: \"center\",\n          }}\n        >\n          <li>\n            <h1\n              style={{\n                textShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                color: \"#322e3b\",\n                fontFamily: \"Helvetica\",\n                fontSize: \"4.8vw\",\n              }}\n            >\n              Become a member\n            </h1>\n          </li>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              handleRegister(this.state);\n            }}\n          >\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"1.733vw\",\n                fontSize: \"1.667vw\",\n              }}\n            >\n              <input\n                placeholder=\"username\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"4.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"1.733vw\",\n                fontSize: \"1.667vw\",\n              }}\n            >\n              <input\n                placeholder=\"email\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"4.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"1.733vw\",\n                fontSize: \"1.667vw\",\n              }}\n            >\n              <input\n                placeholder=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"4.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            {/* <input\n            placeholder=\"password confirmation\"\n            type=\"password\"\n            name=\"password_confirmation\"\n            value={password_confirmation}\n            onChange={this.handleChange}\n          /> */}\n            <li class=\"p-10 md:p-10 sm:p-10\">\n              <button\n                placeholder=\"submit\"\n                type=\"submit\"\n                class=\"font-medium text-white\"\n                style={{\n                  fontFamily: \"Helvetica\",\n                  height: \"3.933vw\",\n                  width: \"9.967vw\",\n                  fontWeight: \"550\",\n                  fontSize: \"1.617vw\",\n                  borderRadius: \"0.8vw\",\n                  background: \"#85c0be\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                }}\n              >\n                Join\n              </button>\n            </li>\n          </form>\n          <div>{this.state.errors ? this.handleErrors() : null}</div>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","import React, { Component } from \"react\";\nimport {\n  getUserPosts,\n  addPost,\n  deletePost,\n  updatePost,\n} from \"../services/apihelper\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nclass CurrentUser extends Component {\n  state = {\n    posts: null,\n    addPost: false,\n    post: {\n      title: \"\",\n      description: \"\",\n      body: \"\",\n    },\n  };\n\n  componentDidMount = async () => {\n    const id = this.props.match.params.id;\n    const posts = await getUserPosts(id);\n    this.setState({\n      posts,\n    });\n    if (this.props.post) this.setFormData();\n  };\n\n  toggleAdd = () => {\n    this.setState((prevState) => ({\n      addPost: !prevState.addPost,\n    }));\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState) => ({\n      post: {\n        ...prevState.post,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleAdd = async (e) => {\n    e.preventDefault();\n    const newPost = await addPost(this.props.match.params.id, this.state.post);\n    this.setState((prevState) => ({\n      posts: [...prevState.posts, newPost],\n    }));\n  };\n\n  removePosts = async (id) => {\n    const deleted = await deletePost(id);\n    this.setState((prevState) => ({\n      posts: prevState.posts.filter((onePost) => onePost.id != deleted.id),\n    }));\n  };\n\n  render() {\n    return (\n      <div class=\"py-2 max-w-full\" className=\"Contains-All\">\n        <h1 className=\"Post-Page-Title\">Your Posts</h1>\n        {this.state.posts &&\n          this.state.posts.map((post) => (\n            <div className=\"State-div\">\n              <ul className=\"Table-Flex-Contain\">\n                <li style={{ display: \"block\" }}>\n                  <p className=\"Post-Title\">{post.title}</p>\n\n                  <hr className=\"Table-Divide\"></hr>\n                </li>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p>\n                    <strong>Description: </strong>\n                    {post.description}\n                  </p>\n                </li>\n                <hr className=\"Table-Divide\"></hr>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p class=\"font-light\">{post.body}</p>\n                </li>\n                <hr className=\"Table-Divide\"></hr>\n\n                <li style={{ padding: \"0.267vw 0\" }}>\n                  <p className=\"Post-Info\">\n                    <strong>Created on:&nbsp;</strong>{\" \"}\n                    <Moment format=\"MMM D, YYYY\" withTitle>\n                      {post.created_at}\n                    </Moment>\n                    <br></br>\n                    <strong>Last updated:</strong>{\" \"}\n                    <Moment fromNow ago>\n                      {post.updated_at}\n                    </Moment>\n                    &nbsp;ago\n                  </p>\n                </li>\n\n                <strong className=\"Category-Descrip\">Categories:</strong>\n                <li className=\"Cat-Button-Contain\">\n                  {post.categories.map((category) => (\n                    <button>\n                      <Link\n                        to={`/category/${category.id}`}\n                        class=\"font-medium text-white\"\n                      >\n                        {category.name}\n                      </Link>\n                    </button>\n                  ))}\n                </li>\n              </ul>\n              <ul\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignContent: \"flex-start\",\n                }}\n              >\n                <li className=\"CRUD-Buttons\">\n                  <button>\n                    <Link\n                      to={`/posts/${post.id}/edit`}\n                      class=\"font-bold text-white\"\n                    >\n                      Edit\n                    </Link>\n                  </button>\n                  <button\n                    class=\"font-medium text-white\"\n                    placeholder=\"Delete\"\n                    onClick={() => {\n                      if (window.confirm(\"Are you sure you want to delete?\")) {\n                        this.removePosts(post.id);\n                      }\n                    }}\n                  >\n                    Delete\n                  </button>\n                  <button class=\"font-medium text-white\">\n                    <Link to=\"/post/new\">New</Link>\n                  </button>\n                </li>\n              </ul>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CurrentUser);\n","import React, { Component } from \"react\";\nimport {getCategories} from \"../../services/apihelper\"\n\nexport default class CreatePost extends Component {\n  state = {\n    postData: {\n    title: \"\",\n        description: \"\",\n        category_ids: [],\n          body: \"\"\n      },\n      categories: []\n};\n\n// categories: [],\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n    //   console.log(this.props.categories)\n  };\n\n  handleInputChange = (event) => {\n    const value = [parseInt(event.target.value)];\n\n    const target = event.target;\n    if (target.checked) {\n      this.setState((prevState) => ({\n        category_ids: [...prevState.postData.category_ids, ...value],\n      }));\n    } else {\n      const filtered = this.state.category_ids.filter((id) => {\n        return id !== value[0];\n      });\n      this.setState({\n        category_ids: filtered,\n    });\n   \n    }\n      \n      console.log(this.state)\n  };\n    componentDidMount = async () => {\n        const categories = await getCategories();\n        this.setState({\n            categories,\n        });\n        console.log(this.state.categories)\n }\n\n\n  render() {\n    //   const categoriesData =\n    //       this.props.categories.map((category) => (\n    //   <div class=\"inline-flex flex-row\">\n    //     <input\n    //     //   type=\"checkbox\"\n    //     //   id={category.id}\n    //       name={category.name}\n    //     //   checked={this.state.name}\n    //     //   onChange={this.handleInputChange}\n    //     //   value={category.id}\n    //     />\n    //     <label for=\"category\">{category.name}</label>\n    //   </div>\n    // ));\n    return (\n      <div>\n        <ul\n          class=\"py-8 max-w-full m-auto \"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            flexFlow: \"column wrap\",\n            textAlign: \"center\",\n          }}\n        >\n          <li>\n            <h1\n              style={{\n                textShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                color: \"#322e3b\",\n                fontFamily: \"Helvetica\",\n                fontSize: \"2.8vw\",\n              }}\n            >\n              Create a post{\" \"}\n            </h1>\n          </li>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              this.props.handleAdd(this.state);\n              this.props.history.push(`/profile/${this.props.currentUser.id}`);\n              \n            }}\n          >\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"0.833vw\",\n                fontSize: \"0.967vw\",\n              }}\n            >\n              <input\n                name=\"title\"\n                placeholder=\"Title\"\n                type=\"text\"\n                value={this.state.title}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"3.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"0.833vw\",\n                fontSize: \"0.967vw\",\n              }}\n            >\n              <input\n                name=\"description\"\n                placeholder=\"Description\"\n                type=\"text\"\n                value={this.state.description}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"3.067vw\",\n                  borderRadius: \"0.8vw\",\n                  textIndent: \"1.067vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                }}\n              />\n            </li>\n            <li\n              style={{\n                position: \"relative\",\n                padding: \"0.833vw\",\n                fontSize: \"0.967vw\",\n              }}\n            >\n              <textarea\n                name=\"body\"\n                type=\"text\"\n                placeholder=\"Body\"\n                value={this.state.body}\n                onChange={this.handleChange}\n                style={{\n                  width: \"44.4vw\",\n                  height: \"20.067vw\",\n                  borderRadius: \"0.8vw\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.48)\",\n                  paddingTop: \"1.067vw\",\n                  paddingLeft: \"1.067vw\",\n                }}\n              />\n                    </li>\n                <li> {this.state.categories.map((category) => (\n    <div class=\"inline-flex flex-row\">\n    <input\n      type=\"checkbox\"\n      id={category.id}\n        name={category.name}\n      checked={this.state.name}\n      onChange={this.handleInputChange}\n      value={category.id}\n    />\n    <label for=\"category\">{category.name}</label>\n    </div>\n))}</li>\n            {/* <li>{categoriesData}</li> */}\n\n            <li class=\"p-4 md:p-4 sm:p-4\">\n              <button\n                placeholder=\"submit\"\n                type=\"submit\"\n                class=\"font-medium text-white\"\n                style={{\n                  fontFamily: \"Helvetica\",\n                  height: \"3.933vw\",\n                  width: \"9.967vw\",\n                  fontWeight: \"550\",\n                  fontSize: \"1.617vw\",\n                  borderRadius: \"0.8vw\",\n                  background: \"#85c0be\",\n                  boxShadow: \"0px 3px 6px rgba(0, 0, 0, 0.16)\",\n                }}\n              >\n                Add Post\n              </button>\n            </li>\n          </form>\n          {/* } */}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getOneCategory, addPost, getPosts } from \"../services/apihelper\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport \"../assets/post-table.scss\";\n\nexport default class Categories extends Component {\n  state = {\n    category: null,\n  };\n  componentDidMount = async () => {\n    const category = await getOneCategory(this.props.match.params.id);\n    this.setState({\n      category,\n    });\n    const posts = await getPosts();\n    this.setState({\n      posts,\n    });\n  };\n\n  render() {\n    const createdBy =\n      this.state.posts &&\n      this.state.posts.slice(0,1).map((post) => (\n        <div>\n          <p className=\"Post-Info\">\n                    <strong>\n                      Created by:&nbsp;\n                      <strong style={{ fontSize: \"0.70vw\" }}>\n                      <Link to={`/member/${post.user_id}`}>{post.user.username}</Link>&nbsp;\n                      </strong>\n                    </strong>{\" \"}\n                    on&nbsp;\n                    <Moment format=\"MMM D, YYYY\" withTitle>\n                      {post.created_at}\n                    </Moment>\n                    <br></br>\n                    <strong>Last updated:</strong>{\" \"}\n                    <Moment fromNow ago>\n                      {post.updated_at}\n                    </Moment>\n                    &nbsp;ago\n                  </p>\n        </div>\n      ));\n    return (\n      <div class=\"py-2 max-w-full\" className=\"Contains-All\">\n        {this.state.category && (\n          <div>\n            <h1 className=\"Post-Page-Title\">\n              {this.state.category.name}\n            </h1>\n            {this.state.category.posts.map((post) => (\n              <div className=\"State-div\">\n                <ul className=\"Table-Flex-Contain\">\n                  <li style={{ width: \"100%\" }}>\n                    <p className=\"Post-Title\">{post.title}</p>\n                    <hr className=\"Table-Divide\"></hr>\n                  </li>\n                  <li style={{ padding: \"0.767vw 0\", width: \"100%\" }}>\n                    <p\n                      className=\"Post-Description\"\n                    >\n                      <strong>Description: </strong>\n                      {post.description}\n                    </p>\n                  </li>\n                  <hr\n                    className=\"Table-Divide\"\n                  ></hr>\n                  <li style={{ padding: \"0.767vw 0\", width: \"100%\" }}>\n                    <p class=\"font-light\" className=\"Post-Body\">\n                      {post.body}\n                    </p>\n                  </li>\n                  <hr\n                    className=\"Table-Divide\"\n                  ></hr>\n\n                  <li style={{ padding: \"0.767vw 0\", width: \"100%\" }}>\n                    {createdBy}\n\n                    \n                  </li>\n                  <hr\n                    className=\"Table-Divide\"\n                  ></hr>\n\n                  <li style={{ padding: \"0.767vw 0\", width: \"100%\" }}>\n                    <p></p>\n                        </li>\n                        \n                </ul>\n              </div>\n            ))}\n                </div>\n                \n            )}\n            \n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { withRouter, Link, Route } from \"react-router-dom\";\nimport { getUsers, getPosts, getCategories, getOnePost } from \"../services/apihelper\";\nimport Moment from \"react-moment\";\nimport \"../assets/post-table.scss\";\nclass AllPosts extends Component {\n  state = {\n    posts: null,\n      users: {\n          id: \"\",\n      username: \"\",\n      },\n      categories: null,\n    post: {\n      title: \"\",\n      description: \"\",\n      body: \"\",\n    },\n    categories: [],\n    category_ids: [],\n  };\n  componentDidMount = async () => {\n    const users = await getUsers();\n    this.setState({\n      users,\n    });\n    const posts = await getPosts();\n    this.setState({\n      posts,\n    });\n    const categories = await getCategories();\n    this.setState({\n      categories,\n    });\n    const userpost = await getOnePost();\n    this.setState({\n      userpost,\n    });\n\n    const categoriesData = await getCategories();\n\n    this.setState({\n      categories: categoriesData,\n    });\n  };\n  render() {\n    return (\n      <div class=\"py-2 max-w-full\" className=\"Contains-All\">\n        <h1 className=\"Post-Page-Title\">All Posts</h1>\n        {this.state.posts &&\n          this.state.posts.map((post, users,) => (\n            <div className=\"State-div\">\n              <ul className=\"Table-Flex-Contain\">\n                <li>\n                  <p className=\"Post-Title\"><Link to={`/member/${users.id}/post/${post.id}`}>{post.title}                  \n                        </Link></p>\n                  <hr className=\"Table-Divide\"></hr>\n                </li>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p className=\"Post-Description\">\n                    <strong>Description: </strong>\n                    {post.description}\n                  </p>\n                </li>\n                <hr className=\"Table-Divide\"></hr>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p class=\"font-light\">{post.body}</p>\n                </li>\n                <hr className=\"Table-Divide\"></hr>\n\n                <li style={{ padding: \"0.267vw 0\" }}>\n                  <p className=\"Post-Info\">\n                    <strong>\n                      Created by:&nbsp;\n                      <strong style={{ fontSize: \"0.70vw\" }}>\n                        <Link to={`/member/${post.user_id}`}>\n                          {post.user.username}\n                        </Link>\n                        &nbsp;\n                      </strong>\n                    </strong>{\" \"}\n                    on&nbsp;\n                    <Moment format=\"MMM D, YYYY\" withTitle>\n                      {post.created_at}\n                    </Moment>\n                    <br></br>\n                    <strong>Last updated:</strong>{\" \"}\n                    <Moment fromNow ago>\n                      {post.updated_at}\n                    </Moment>\n                    &nbsp;ago\n                  </p>\n                </li>\n                <strong className=\"Category-Descrip\">Categories:</strong>\n                <li className=\"Cat-Button-Contain\">\n                  {post.categories.map((category) => (\n                    <button>\n                      <Link\n                        to={`/category/${category.id}`}\n                        class=\"font-medium text-white\"\n                      >\n                        {category.name}\n                      </Link>\n                    </button>\n                  ))}\n                </li>\n              </ul>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\nexport default withRouter(AllPosts);\n","import React, { Component } from \"react\";\nimport {\n  getOnePost,\n  updatePosts,\n  getUserPosts,\n} from \"../../services/apihelper\";\nimport '../../assets/post-table.scss'\n\nexport default class EditPosts extends Component {\n  state = {\n    currentPost: { title: \"\", description: \"\", body: \"\" },\n  };\n  componentDidMount = async () => {\n    const id = this.props.match.params.id;\n    const currentPost = await getOnePost(id);\n\n    this.setState({\n      currentPost: {\n        title: currentPost.title,\n        description: currentPost.description,\n        body: currentPost.body,\n      },\n    });\n  };\n\n  handleChange = (e) => {\n    const { value, name } = e.target;\n    this.setState((prevState) => ({\n      currentPost: {\n        ...prevState.currentPost,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const { editPosts, history } = this.props;\n    return (\n      <div         class=\"py-2 max-w-full\"\n            style={{margin: \"0 6.667vw\"}}>\n                    <h1 className=\"Post-Page-Title\">Make an update</h1>\n\n            {this.state.currentPost && (\n                <div className=\"State-div\">\n                    <ul className=\"Edit-Table-Flex-Contain\">\n                    <form \n            onSubmit={(e) => {\n              e.preventDefault();\n              editPosts(this.props.match.params.id, this.state.currentPost);\n              history.push(\"/posts\");\n            }}\n          >\n          <li>\n            <label className=\"Post-Title\">\n              Title:\n              <input \n                type=\"text\"\n                name=\"title\"\n                value={this.state.currentPost.title}\n                onChange={this.handleChange}\n              />\n                            </label>\n                            <hr className=\"Table-Divide\"></hr>\n                            </li>\n                            <li style={{ padding: \"0.767vw 0\" }}>\n    \n            <label className=\"Post-Title\">\n              Description:\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.currentPost.description}\n                onChange={this.handleChange}\n              />\n                                </label>\n                            </li> \n                            <hr className=\"Table-Divide\"></hr>\n                            <li style={{ padding: \"0.767vw 0\" }}>\n\n            <label class=\"font-light\">\n              Body:\n              <input className=\"Body-Edit\"\n                type=\"text\"\n                name=\"body\"\n                value={this.state.currentPost.body}\n                onChange={this.handleChange}\n              />\n                                </label>\n                            </li>\n                            <hr className=\"Table-Divide\"></hr>\n\n            <button>Submit</button>\n                    </form>\n                    </ul>\n                    </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getUserPosts, getUsers } from \"../services/apihelper\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport \"../assets/post-table.scss\";\nimport Moment from \"react-moment\";\n\nclass MemberPosts extends Component {\n  state = {\n    posts: null,\n    addPost: false,\n    post: {\n      title: \"\",\n      description: \"\",\n      body: \"\",\n    },\n  };\n\n  componentDidMount = async () => {\n    const users = await getUsers();\n    this.setState({\n      users,\n    });\n    const id = this.props.match.params.id;\n    const posts = await getUserPosts(id);\n    this.setState({\n      posts,\n    });\n    if (this.props.post) this.setFormData();\n  };\n\n  render() {\n    return (\n      <div class=\"py-2 max-w-full\" className=\"Contains-All\">\n        {this.state.posts &&\n          this.state.posts.slice(0,1).map((post) => (\n            <h1 className=\"Post-Page-Title\">{post.user.username}'s Posts</h1>\n          ))}\n\n        {this.state.posts &&\n                this.state.posts.map((post) => (\n              \n                    <div className=\"State-div\">\n              <ul className=\"Table-Flex-Contain\">\n                <li>\n                  <p className=\"Post-Title\">{post.title}</p>\n                  <hr className=\"Table-Divide\"></hr>\n                </li>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p className=\"Post-Description\">\n                    <strong>Description: </strong>\n                    {post.description}\n                  </p>\n                </li>                <hr className=\"Table-Divide\"></hr>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p class=\"font-light\">{post.body}</p>\n                </li>\n                      <hr className=\"Table-Divide\"></hr>\n                      <li style={{ padding: \"0.267vw 0\" }}>\n                  <p className=\"Post-Info\">\n                    <strong>\n                      Created by:&nbsp;\n                      <strong style={{ fontSize: \"0.70vw\" }}>\n                        <Link to={`/member/${post.user_id}`}>\n                          {post.user.username}\n                        </Link>\n                        &nbsp;\n                      </strong>\n                    </strong>{\" \"}\n                    on&nbsp;\n                    <Moment format=\"MMM D, YYYY\" withTitle>\n                      {post.created_at}\n                    </Moment>\n                    <br></br>\n                    <strong>Last updated:</strong>{\" \"}\n                    <Moment fromNow ago>\n                      {post.updated_at}\n                    </Moment>\n                    &nbsp;ago\n                  </p>\n                </li>\n                <strong className=\"Category-Descrip\">Categories:</strong>\n                <li className=\"Cat-Button-Contain\">\n                  {post.categories.map((category) => (\n                    <button>\n                      <Link\n                        to={`/category/${category.id}`}\n                        class=\"font-medium text-white\"\n                      >\n                        {category.name}\n                      </Link>\n                    </button>\n                  ))}\n                </li>\n              </ul>\n            </div>\n          ))}\n            \n      </div>\n    );\n  }\n}\n\nexport default withRouter(MemberPosts);\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\nimport '../assets/post-table.scss'\n\nexport default class Members extends Component {\n\n    render() {\n        return (\n            <div className=\"MembersList\">\n                {this.props.users &&\n              this.props.users.map((user) => (\n                <div className=\"user\">\n                  <Link to={`/member/${user.id}`}>\n                    <h2>{user.username}</h2>\n                    <img src={user.url} />\n                  </Link>\n                </div>\n              ))}\n\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { getUserPosts, getUsers } from \"../services/apihelper\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport \"../assets/post-table.scss\";\nimport Moment from \"react-moment\";\n\nclass MemberPosts extends Component {\n  state = {\n    posts: null,\n    addPost: false,\n    post: {\n      title: \"\",\n      description: \"\",\n      body: \"\",\n    },\n  };\n\n  componentDidMount = async () => {\n    const users = await getUsers();\n    this.setState({\n      users,\n    });\n    const id = this.props.match.params.id;\n    const posts = await getUserPosts(id);\n    this.setState({\n      posts,\n    });\n    if (this.props.post) this.setFormData();\n  };\n\n  render() {\n    return (\n      <div class=\"py-2 max-w-full\" className=\"Contains-All\">\n        {this.state.posts &&\n          this.state.posts.slice(0,1).map((post) => (\n            <h1 className=\"Post-Page-Title\">{post.user.username}'s Posts</h1>\n          ))}\n\n        {this.state.posts &&\n                this.state.posts.map((post) => (\n              \n                    <div className=\"State-div\">\n              <ul className=\"Table-Flex-Contain\">\n                <li>\n                  <p className=\"Post-Title\">{post.title}</p>\n                  <hr className=\"Table-Divide\"></hr>\n                </li>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p className=\"Post-Description\">\n                    <strong>Description: </strong>\n                    {post.description}\n                  </p>\n                </li>                <hr className=\"Table-Divide\"></hr>\n                <li style={{ padding: \"0.767vw 0\" }}>\n                  <p class=\"font-light\">{post.body}</p>\n                </li>\n                      <hr className=\"Table-Divide\"></hr>\n                      <li style={{ padding: \"0.267vw 0\" }}>\n                  <p className=\"Post-Info\">\n                    <strong>\n                      Created by:&nbsp;\n                      <strong style={{ fontSize: \"0.70vw\" }}>\n                        <Link to={`/member/${post.user_id}`}>\n                          {post.user.username}\n                        </Link>\n                        &nbsp;\n                      </strong>\n                    </strong>{\" \"}\n                    on&nbsp;\n                    <Moment format=\"MMM D, YYYY\" withTitle>\n                      {post.created_at}\n                    </Moment>\n                    <br></br>\n                    <strong>Last updated:</strong>{\" \"}\n                    <Moment fromNow ago>\n                      {post.updated_at}\n                    </Moment>\n                    &nbsp;ago\n                  </p>\n                </li>\n                <strong className=\"Category-Descrip\">Categories:</strong>\n                <li className=\"Cat-Button-Contain\">\n                  {post.categories.map((category) => (\n                    <button>\n                      <Link\n                        to={`/category/${category.id}`}\n                        class=\"font-medium text-white\"\n                      >\n                        {category.name}\n                      </Link>\n                    </button>\n                  ))}\n                </li>\n              </ul>\n            </div>\n          ))}\n            \n      </div>\n    );\n  }\n}\n\nexport default withRouter(MemberPosts);\n","import React, { Component } from \"react\";\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\n//import axios from \"axios\";\n\nimport {\n  loginUser,\n  verifyUser,\n  registerUser,\n  removeToken,\n} from \"./services/auth\";\nimport {\n  getUsers,\n  getPosts,\n  getCategories,\n  addPost, updatePost\n} from \"./services/apihelper\";\n// import \"./App.css\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Home from \"./React_pages/Home.jsx\";\nimport Login from \"./components/Registration/Login.jsx\";\nimport Signup from \"./components/Registration/Sign_up.jsx\";\nimport CurrentUser from \"./React_pages/CurrentUser\";\nimport CreatePost from \"./components/Post/CreatePost.jsx\";\nimport Categories from \"./React_pages/Categories\";\nimport AllPosts from \"./React_pages/AllPosts\";\nimport EditPosts from \"./components/Post/EditPosts\"\nimport MemberPosts from \"./React_pages/MemberPosts.jsx\"\nimport Members from \"./React_pages/Members\";\nimport SinglePost from \"./React_pages/SinglePost\";\n// import CategoryDropDown from \"./components/Create Post/CategoryDropDown\";\n\nclass App extends Component {\n  state = {\n    users: null,\n    userData: {\n      username: \"\",\n      password: \"\",\n    },\n    currentUser: null,\n      posts: null,\n    categories: [],\n  };\n\n    \n  componentDidMount = async () => {\n    const currentUser = await verifyUser();\n    this.setState({\n      currentUser,\n    });\n    const users = await getUsers();\n    this.setState({\n      users,\n    });\n    const posts = await getPosts();\n    this.setState({\n      posts,\n    });\n    const categories = await getCategories();\n    this.setState({\n      categories,\n    });\n      console.log(this.state.categories[0].name)\n\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState) => ({\n      userData: {\n        ...prevState.userData,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleAdd = async (postData) => {\n    const newPost = await addPost(postData);\n    this.setState((prevState) => ({\n      posts: [...prevState.posts, newPost],\n    }));\n    window.location.reload(false);\n  };\n\n  loginSubmit = async (userData) => {\n    const currentUser = await loginUser(userData);\n    this.setState({\n      currentUser,\n    });\n  };\n\n  handleLogout = () => {\n    this.setState({\n      currentUser: null,\n    });\n    localStorage.removeItem(\"authToken\");\n    removeToken();\n    this.props.history.push(\"/\");\n  };\n\n  handleRegister = async (userData) => {\n    const currentUser = await registerUser(userData);\n    this.setState({ currentUser });\n    this.props.history.push(`/profile/${currentUser.username}`);\n  };\n\n    editPosts = async (id, postData) => {\n        const updated = await updatePost(id, postData);\n        this.setState((prevState) => ({\n            posts: prevState.posts.map(oldPost => oldPost.id === updated.id ? updated : oldPost)\n        }))\n    };\n\n  \n\n  render() {\n\n    return (\n      <div class=\"h-screen, m-0, p-0\">\n        <Header\n          handleChange={this.handleChange}\n          userData={this.state.userData}\n          handleLogin={this.loginSubmit}\n          currentUser={this.state.currentUser}\n          handleLogout={this.handleLogout}\n        />\n        <div class=\"mt-28 px-12 \">\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <Home\n                {...props}\n                handleLogout={this.handleLogout}\n                loggedInStatus={this.state.isLoggedIn}\n                currentUser={this.state.currentUser}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => (\n              <Login\n                {...props}\n                loginSubmit={this.loginSubmit}\n                loggedInStatus={this.state.isLoggedIn}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/signup\"\n            render={(props) => (\n              <Signup\n                {...props}\n                handleChange={this.handleChange}\n                userData={this.state.userData}\n                handleRegister={this.handleRegister}\n                currentUser={this.state.currentUser}\n              />\n            )}\n          />\n                <Route exact path=\"/members\"\n                    render={( props ) => (\n                <Members\n                            {...props}\n                            users={this.state.users}\n                />)}\n     \n          />\n\n\n\n          <Route\n            //All User posts\n            exact\n            path=\"/posts\"\n            render={(props) => (\n              <AllPosts {...props} userData={this.state.userData} />\n            )}\n          />\n\n          <Route\n            //Current User posts\n\n            exact\n            path=\"/profile/:id/\"\n            render={(props) => (\n              <CurrentUser\n                {...props}\n                currentUser={this.state.currentUser}\n                userData={this.state.userData}\n                handleSubmit={this.handleSubmit}\n                handleUpdate={this.onUpdate}\n                items={this.state.items}\n                onUpdate={this.handleUpdate}\n              />\n            )}\n                ></Route>\n                \n                <Route\n            //Other User posts\n\n            exact\n            path=\"/member/:id/\"\n            render={(props) => (\n              <MemberPosts\n                {...props}\n                currentUser={this.state.currentUser}\n                userData={this.state.userData}\n              />\n            )}\n                ></Route>\n\n<Route\n            //One Post\n\n            exact\n            path=\"/member/:id/post/:id\"\n            render={(props) => (\n              <SinglePost\n                {...props}\n                currentUser={this.state.currentUser}\n                userData={this.state.userData}\n              />\n            )}\n                ></Route>\n\n\n\n\n          <Route\n            exact\n            path=\"/post/new\"\n            render={(props) => (\n              <CreatePost\n                {...props}\n                handleAdd={this.handleAdd}\n                    currentUser={this.state.currentUser}\n                    categories={this.state.categories}\n              />\n            )}\n          />\n        <Route path='/posts/:id/edit' render={(props) => {\n          const { id } = props.match.params;\n          return <EditPosts\n            {...props}\n            editPosts={this.editPosts}\n            id={id}\n          />\n        }} />\n\n<Route\n            exact\n            path=\"/category/:id\"\n                    render={(props) => <Categories {...props}\n                    userData={this.state.userData}\n                    />}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}